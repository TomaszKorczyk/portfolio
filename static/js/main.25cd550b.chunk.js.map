{"version":3,"sources":["utils/hooks/useTFClassify.js","components/Image.js","utils/hooks/useFetchImage.js","components/Loading.js","components/Images.js","utils/hooks/useDebounce.js","page/Gallery.js","page/Home.js","config/firebase.js","page/Login.js","page/SignUp.js","page/tensorflow.js","utils/routes/index.js","store/AppContext.js","components/Header.js","utils/routes/AnimatedRoute.js","utils/routes/AuthRoute.js","utils/routes/GuestRoute.js","page/404.js","App.js","index.js"],"names":["useTFClassify","useState","isLoading","setIsLoading","predictions","setPredictions","predict","img","mobilenet","then","model","classify","Image","index","image","handleRemove","show","isHovering","setIsHovering","imageRef","useRef","className","onMouseEnter","onMouseLeave","length","onClick","map","prediction","Math","floor","probability","current","ref","src","width","height","crossOrigin","alt","useFetchImage","page","searchTerm","images","setImages","errors","setErrors","fetch","url","axios","get","process","res","data","fetchRandom","results","fetchSearch","catch","e","useEffect","Loading","Images","setPage","setSearchTerm","slice","showPreview","setShowPreview","debounce","typingTimeout","setTypingTimeout","func","wait","clearTimeout","timeout","setTimeout","useDebounce","type","onChange","text","target","value","placeholder","dataLength","next","hasMore","div","layoutId","urls","regular","section","exit","opacity","rotate","transition","duration","Gallery","Home","h1","initial","x","animate","scale","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","error","setError","email","password","form","setForm","history","useHistory","handleInput","name","onSubmit","preventDefault","auth","signInWithEmailAndPassword","replace","message","autoComplete","SignUp","initialValues","formikBag","createUserWithEmailAndPassword","setFieldError","validationSchema","Yup","required","min","Tensorflow","routes","path","exact","component","protected","AppContext","React","createContext","loggedIn","user","Header","useContext","isLoggedIn","to","activeClassName","strict","signOut","console","log","response","AnimatedRoute","children","rest","AuthRoute","GuestRoute","NotFound","App","setIsLoggedIn","setUser","onAuthStateChanged","location","useLocation","Provider","exitBeforeEnter","route","pathname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25cd550b.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport \"@tensorflow/tfjs\";\r\nimport * as mobilenet from \"@tensorflow-models/mobilenet\";\r\n\r\nexport default function useTFClassify() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [predictions, setPredictions] = useState([]);\r\n    function predict(img) {\r\n        setIsLoading(true);\r\n        mobilenet.load().then((model) => {\r\n            \r\n            model.classify(img).then((predictions) => {\r\n                setPredictions(predictions);\r\n                setIsLoading(false);\r\n            });\r\n        });\r\n    }\r\n\r\n    return {predict, predictions, setPredictions, isLoading};\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useTFClassify from '../utils/hooks/useTFClassify';\r\n\r\nfunction Image({index, image, handleRemove, show}) {\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    const imageRef = useRef();\r\n    const {predict, predictions, setPredictions, isLoading} = useTFClassify();\r\n    \r\n    return (\r\n        <div \r\n            className=\"relative\"\r\n            onMouseEnter={()=>setIsHovering(true)}\r\n            onMouseLeave={()=>setIsHovering(false)}\r\n        >\r\n            {(predictions.length > 0 || isLoading) && (\r\n                <span\r\n                    className=\"absolute bg-gray-800 text-white rounded-lg shadow px-2 top-1 left-0 mx-8 py-1\"\r\n                    onClick={() => setPredictions([])}\r\n                >\r\n                    {isLoading && <p>Fetching results...</p>} \r\n                    {predictions.map((prediction) => (\r\n                        <div className=\"flex justify-between text-sm my-0.5\">\r\n                            <p className=\"mr-2 text-left\">- {prediction.className}</p>\r\n                            <p>{Math.floor(prediction.probability * 100)}%</p>\r\n                        </div>\r\n                    ))}\r\n                </span>\r\n            )}\r\n            <i \r\n                className={`fas fa-times absolute bg-white rounded-3xl text-black px-1 py-0.5 rounded right-1 top-1 cursor-pointer opacity-25 hover:opacity-100 \r\n                ${isHovering ? \"\" : \"hidden\"}`}\r\n                onClick={() => handleRemove(index)}\r\n            ></i>\r\n            <i \r\n                className={`fas fa-search absolute bg-white rounded-3xl text-black px-1 py-1 rounded left-1 top-1 cursor-pointer opacity-25 hover:opacity-100 \r\n                ${isHovering ? \"\" : \"hidden\"}`}\r\n                onClick={() => predict(imageRef.current)}\r\n            ></i>\r\n            <img\r\n                ref={imageRef}\r\n                onClick={show}\r\n                src={image}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                crossOrigin=\"anonymous\"\r\n                alt=\"\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nImage.propTypes = {\r\n    show: PropTypes.func,\r\n    index: PropTypes.number,\r\n    image: PropTypes.string,\r\n    handleRemove: PropTypes.func, \r\n};\r\n\r\nexport default Image;","import { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst api = process.env.REACT_APP_UNSPLASH_API;\r\nconst secret = process.env.REACT_APP_UNSPLASH_KEY;\r\n\r\nexport default function useFetchImage(page, searchTerm) {\r\n    const [images, setImages] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    function fetch() {\r\n        \r\n        const url = \r\n            searchTerm === null ? \"photos/?\" : `search/photos/?query=${searchTerm}&`;\r\n        axios.get(`${api}/${url}&client_id=${secret}&page=${page}`)\r\n            .then((res) => {\r\n                searchTerm === null ? fetchRandom(res) : fetchSearch(res);            \r\n                setIsLoading(false);\r\n            })\r\n            .catch((e) => {\r\n                setErrors([\"Unable to fetch images\"]);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    function fetchSearch(res) {\r\n        page > 1 \r\n            ? setImages([...images, ...res.data.results])\r\n            : setImages([...res.data.results]);\r\n    }\r\n\r\n    function fetchRandom(res) {\r\n        setImages([...images, ...res.data]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        fetch();\r\n    }, [page, searchTerm]);\r\n\r\n    return [images, setImages, errors, isLoading];\r\n}","import React from 'react'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"flex h-screen\">\r\n            <p className=\"m-auto\">\r\n                <i className=\"fas fa-circle-notch fa-spin text-5xl text-blue-800\"></i>\r\n            </p>            \r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Image from './Image';\r\nimport useFetchImage from '../utils/hooks/useFetchImage';\r\nimport Loading from './Loading';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport useDebounce from '../utils/hooks/useDebounce';\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\r\n\r\nexport default function Images() {\r\n    const [page, setPage] = useState(1);\r\n    const [searchTerm, setSearchTerm] = useState(null);\r\n    const [images, setImages, errors, isLoading] = useFetchImage(page, searchTerm);\r\n\r\n    function handleRemove(index) {\r\n        setImages([\r\n        ...images.slice(0,index),\r\n        ...images.slice(index + 1, images.length),\r\n        ]);\r\n    }\r\n\r\n    const [showPreview, setShowPreview] = useState(false);\r\n\r\n    const debounce = useDebounce();\r\n    function handleInput(e) {\r\n        const text = e.target.value;\r\n        debounce(() => setSearchTerm(text));\r\n    }\r\n\r\n    return (\r\n        <section className=\"text-white\">\r\n            <div className=\"my-4\">\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={handleInput}\r\n                    className=\"w-10/12 p-2 rounded border-yellow-500 shadow-inner text-black text-center\"\r\n                    placeholder=\"Search Photos Here\"\r\n                />\r\n            </div>\r\n            {errors.length > 0 && (\r\n                <div className=\"flex h-screen\">\r\n                    <p className=\"m-auto\">\r\n                        {errors[0]}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        <AnimateSharedLayout>\r\n            <InfiniteScroll \r\n                dataLength={images.length} \r\n                next={() => setPage(page + 1)}\r\n                hasMore={true}\r\n                className=\"flex flex-wrap\"\r\n            > \r\n                {images.map((img, index) => ( \r\n                    <motion.div \r\n                        className=\"w-1/3 p-2 border flex justify-center\"\r\n                        key={index}\r\n                        layoutId={img.urls.regular}\r\n                    >\r\n                        <Image\r\n                            show = {()=> setShowPreview(img.urls.regular)}\r\n                            image={img.urls.regular}\r\n                            handleRemove={handleRemove} \r\n                            index={index}\r\n                        />\r\n                    </motion.div>\r\n                ))}\r\n            </InfiniteScroll>\r\n            <AnimatePresence>\r\n                {showPreview && (\r\n                    <motion.section\r\n                        layoutId={showPreview}\r\n                        exit={{ opacity: 0,  rotate: 360, transition: {duration: 0.5} }}\r\n                        className=\"fixed w-full h-full flex justify-center items-center top-0 left-0 z-40\"\r\n                        onClick={() => setShowPreview(false)}\r\n                    >\r\n                        <div className=\"bg-white text-black\">\r\n                            <img\r\n                                src={showPreview}\r\n                                className=\"rounded-lg\"\r\n                                width=\"300\"\r\n                                height=\"auto\" \r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </motion.section>\r\n                )}\r\n            </AnimatePresence>\r\n        </AnimateSharedLayout>\r\n        {isLoading && <Loading />}\r\n        </section>\r\n    );\r\n}","import { useState } from 'react'\r\n\r\nexport default function useDebounce() {\r\n    const [typingTimeout, setTypingTimeout] = useState(\"\");\r\n\r\n    function debounce(func,wait = 1000) {\r\n        clearTimeout(typingTimeout);\r\n        const timeout = setTimeout(() => func(), wait);\r\n        setTypingTimeout(timeout);\r\n    }\r\n    return debounce;\r\n}","import React from \"react\";\r\nimport Images from \"../components/Images\";\r\n\r\nexport default function Gallery() {\r\n    return  (\r\n        <section className=\"flex justify-between\">\r\n            <div className=\"w-full\">\r\n                <div className=\"text-center\">\r\n                    <Images />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Home() {\r\n    return( \r\n        <div className=\"flex h-screen text-3xl font-bold\">\r\n            <motion.h1 \r\n                initial={{\r\n                    opacity: 0, \r\n                    x:-300\r\n                }}\r\n                animate={{\r\n                    scale: 1.5, \r\n                    opacity: 1, \r\n                    x:0, \r\n                    transition:{duration:1}, \r\n                    rotate: 720\r\n                }}\r\n                className=\"m-auto tracking-wider\"\r\n            >\r\n                Hello World!! \r\n            </motion.h1>\r\n            p\r\n        </div>\r\n    );\r\n}","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD-hrbnVvNlUV4YDdXyI5XxMq-159drIik\",\r\n    authDomain: \"my-portfolio-5c661.firebaseapp.com\",\r\n    projectId: \"my-portfolio-5c661\",\r\n    storageBucket: \"my-portfolio-5c661.appspot.com\",\r\n    messagingSenderId: \"413371372738\",\r\n    appId: \"1:413371372738:web:d7ffeade8a711b42f3975b\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../config/firebase\";\r\n\r\nexport default function Login() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [form, setForm] = useState({email:\"\",password:\"\"});\r\n    const history = useHistory();\r\n\r\n    function handleForm(e) {\r\n        if (isLoading) return;\r\n        setIsLoading(true);\r\n        e.preventDefault();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(form.email, form.password)\r\n            .then((res) => {\r\n                history.replace(\"/portfolio\");\r\n                setError(\"\");\r\n                setIsLoading(false);\r\n            })\r\n            .catch((e) => {\r\n                setError(e.message);\r\n                setIsLoading(false);\r\n            })\r\n    }\r\n\r\n    function handleInput(e) {\r\n        setForm({...form,[e.target.name]: e.target.value});\r\n    }\r\n\r\n    return(\r\n        <div className=\"flex h-screen text-white text-2xl font-bold\">\r\n            <div className=\"bg-gradient-to-br from-indigo-900 to-indigo-700 m-auto w-3/5 text-white flex flex-wrap justify-center shadow-lg rounded-lg\">\r\n                <form \r\n                    className=\"m-5 w-10/12\" \r\n                    onSubmit={handleForm}\r\n                >\r\n                    {(error !== \"\") && <p>{error}</p>}\r\n                    <h1 \r\n                        className=\"w-full text-4xl tracking-widest text-center\"\r\n                    >\r\n                        Login\r\n                    </h1>\r\n                    <div className=\"w-full my-6\">\r\n                        <input \r\n                            type=\"email\"\r\n                            className=\"p-2 rounded shadow w-full text-black\"\r\n                            placeholder=\"Email or User\"\r\n                            name=\"email\"\r\n                            value={form.email}\r\n                            onChange={handleInput}\r\n                            />\r\n                    </div>\r\n                    <div className=\"w-full my-6\">\r\n                        <input \r\n                            type=\"password\"\r\n                            autoComplete=\"on\"\r\n                            className=\"p-2 rounded shadow w-full text-black\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={form.password}\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                    <div className=\"w-full my-5\">\r\n                        <button \r\n                            type=\"submit\"\r\n                            className=\"p-2 rounded shadow w-full bg-gradient-to-tr from-yellow-600 to-yellow-400 text-black font-bold\"\r\n                        >\r\n                            {isLoading ? (\r\n                                <i className=\"fas fa-circle-notch fa-spin\"></i>\r\n                                ) : (\r\n                                    \"Login\"\r\n                                )\r\n                            }\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignUp() {\r\n    const history = useHistory();\r\n    return(\r\n        <Formik\r\n            initialValues= {{email: \"\", password:\"\"}}\r\n            onSubmit= {(value, formikBag) => {\r\n                firebase\r\n                    .auth()\r\n                    .createUserWithEmailAndPassword(value.email, value.password)\r\n                    .then((res) => {\r\n                        history.replace(\"/\");    \r\n                    })\r\n                    .catch((e) => {\r\n                        formikBag.setFieldError(\"email\", e.message); \r\n                    });\r\n            }}\r\n            validationSchema= {Yup.object({\r\n                email: Yup.string()\r\n                    .required(\"Email is required\")\r\n                    .email(),\r\n                password: Yup.string()\r\n                    .required(\"Password is required\")\r\n                    .min(6),\r\n            })}\r\n        >\r\n            <div className=\"flex h-screen text-white text-2xl font-bold\">\r\n                <div className=\"bg-gradient-to-br from-yellow-900 to-yellow-700 m-auto w-3/5 text-white flex flex-wrap justify-center shadow-lg rounded-lg\">\r\n                    <Form className=\"m-5 w-10/12\">\r\n                        <h1 className=\"w-full text-4xl tracking-widest text-center\">\r\n                            Sign Up Here\r\n                        </h1>\r\n                        <div className=\"w-full my-6\">\r\n                            <Field \r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                className=\"p-2 rounded shadow w-full text-black\"\r\n                                placeholder=\"Email or User\" \r\n                            />\r\n                            <ErrorMessage name=\"email\" />\r\n                        </div>\r\n                        <div className=\"w-full my-6\">\r\n                            <Field \r\n                                name=\"password\" \r\n                                type=\"password\"\r\n                                autoComplete=\"on\"\r\n                                className=\"p-2 rounded shadow w-full text-black\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                            <ErrorMessage name=\"password\" />\r\n                        </div>\r\n                        <div className=\"w-full my-5\">\r\n                            <button \r\n                                type=\"submit\"\r\n                                className=\"p-2 rounded shadow w-full bg-gradient-to-br from-purple-800 to-purple-400 text-black font-bold\"\r\n                            >\r\n                                Sign Up\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Formik>\r\n    );\r\n}","import React, { useRef } from 'react';\r\nimport useTFClassify from '../utils/hooks/useTFClassify';\r\n\r\nexport default function Tensorflow() {\r\n    const imageRef = useRef();\r\n    const {predict, predictions, isLoading} = useTFClassify();\r\n\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <div className=\"w-1/3\">\r\n                <h1 className=\"text-green-300 text-center my-5\">TensorFlow Example</h1>\r\n                <img \r\n                    src=\"https://images.unsplash.com/photo-1534361960057-19889db9621e?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyMDc4Nzl8MHwxfHNlYXJjaHwyOHx8ZG9nfGVufDB8fHx8MTYxNTczOTcwOQ&ixlib=rb-1.2.1&q=80&w=1080\" \r\n                    width=\"400\"\r\n                    crossOrigin=\"anonymous\"\r\n                    ref={imageRef}\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"text-center my-5\">\r\n                    {predictions.length > 0 &&\r\n                        predictions.map((prediction) => (\r\n                            <div className=\"flex justify-between text-left text-white\">\r\n                                <p>{prediction.className}</p>\r\n                                <p>{Math.floor(prediction.probability * 100)} %</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    \r\n                    <button \r\n                        className=\"p-2 mt-5 rounded min-w-full bg-gray-800 text-white font-bold tracking-wider\"\r\n                        onClick={() => predict(imageRef.current)}\r\n                    >\r\n                        {isLoading && \"⏳\"}\r\n                        {!isLoading && \"Predict Result\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Gallery from \"../../page/Gallery\";\r\nimport Home from \"../../page/Home\";\r\nimport Login from \"../../page/Login\";\r\nimport SignUp from \"../../page/SignUp\";\r\nimport Tensorflow from \"../../page/tensorflow\";\r\n\r\nconst routes=[\r\n    {\r\n        path: \"/portfolio\",\r\n        exact: true,\r\n        component: () => <Home />,\r\n        protected: null,\r\n    },\r\n    {\r\n        path: \"/gallery\",\r\n        component: () => <Gallery />,\r\n        protected: \"auth\",\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: () => <Login />,\r\n        protected: \"guest\",\r\n    },\r\n    {\r\n        path: \"/signup\",\r\n        component: () => <SignUp />,\r\n        protected: \"guest\",\r\n    },\r\n    {\r\n        path: \"/tensorflow\",\r\n        component: () => <Tensorflow />,\r\n        protected: null,\r\n    },\r\n];\r\nexport default routes;","import React from \"react\";\r\n\r\nconst AppContext = React.createContext({loggedIn: false, user: {}});\r\n\r\nexport default AppContext;","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport firebase from \"../config/firebase\";\r\nimport AppContext from \"../store/AppContext\";\r\n\r\nexport default function Header() {\r\n    const [isLoggedIn] = useContext(AppContext);\r\n    const history = useHistory();\r\n\r\n    function logout() {\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then((res) => {\r\n                history.replace(\"/login\");\r\n        })\r\n        \r\n        .catch(e =>{\r\n            console.log(e.response.data);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex text-white font-bold tracking-wider p-5 bg-gray-800 justify-between\">\r\n            <ul className=\"flex justify-between\">\r\n                <li className=\"mr-5\">\r\n                    <NavLink \r\n                        to=\"/portfolio\" \r\n                        exact \r\n                        activeClassName=\"underline text-blue-200\"\r\n                    >\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"mr-5\">\r\n                    <NavLink \r\n                        to=\"/gallery\"\r\n                        strict \r\n                        activeClassName=\"underline text-blue-200\"\r\n                    >\r\n                        Gallery\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"mr-5\">\r\n                    <NavLink\r\n                        to=\"/tensorflow\" \r\n                        strict\r\n                        activeClassName=\"underline text-blue-200\"\r\n                    >\r\n                        Tensorflow\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n            <ul className=\"flex justify-between\">\r\n                <li>\r\n                    {isLoggedIn ? (\r\n                        <button\r\n                            className=\"font-bold\" \r\n                            onClick={logout}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    ) : (\r\n                        <NavLink \r\n                            to=\"/login\" \r\n                            activeClassName=\"underline text-blue-200\"\r\n                        >\r\n                            Login\r\n                        </NavLink>\r\n                    )}\r\n                </li>                \r\n                {!isLoggedIn && (\r\n                    <li className=\"ml-5\">\r\n                        <NavLink \r\n                            to=\"/signup\" \r\n                            activeClassName=\"underline text-blue-200\"\r\n                        >\r\n                            SignUp\r\n                        </NavLink>\r\n                    </li>                \r\n                )}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}","import { motion } from 'framer-motion'\r\nimport React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport default function AnimatedRoute({children, ...rest}) {\r\n    return (\r\n        <Route {...rest}>\r\n            <motion.div\r\n                initial={{x:200}}\r\n                animate={{x:0}}\r\n                exit={{scale:0}}\r\n            >\r\n                {children}\r\n            </motion.div>\r\n        </Route>\r\n    );\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Redirect} from 'react-router-dom';\r\nimport AppContext from '../../store/AppContext';\r\nimport AnimatedRoute from './AnimatedRoute';\r\n\r\nexport default function AuthRoute({children, ...rest}) {\r\n    const [isLoggedIn] = useContext(AppContext);\r\n    \r\n    if(isLoggedIn) return (\r\n        <AnimatedRoute {...rest}>\r\n            {children}\r\n        </AnimatedRoute>\r\n    );\r\n\r\n    return (\r\n        <AnimatedRoute>\r\n            <Redirect to=\"/login\" />;\r\n        </AnimatedRoute>\r\n    );\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport AppContext from '../../store/AppContext';\r\nimport AnimatedRoute from './AnimatedRoute';\r\n\r\nexport default function GuestRoute({children, ...rest}) {\r\n    const [isLoggedIn] = useContext(AppContext);\r\n    \r\n    if(!isLoggedIn) return (\r\n        <AnimatedRoute {...rest}>\r\n            {children}\r\n        </AnimatedRoute>\r\n    );\r\n\r\n    return(\r\n        <AnimatedRoute>\r\n            <Redirect to=\"/portfolio\" />;\r\n        </AnimatedRoute>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div className=\"flex h-screen\">\r\n            <h1 className=\"text-4xl m-auto text-white\">\r\n                Page Not Found\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./assets/css/tailwind.css\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport routes from \"./utils/routes/index\";\r\nimport Header from \"./components/Header\";\r\nimport firebase from \"./config/firebase\";\r\nimport AppContext from \"./store/AppContext\";\r\nimport AuthRoute from \"./utils/routes/AuthRoute\";\r\nimport GuestRoute from \"./utils/routes/GuestRoute\";\r\nimport Loading from \"./components/Loading\";\r\nimport NotFound from \"./page/404\";\r\nimport AnimatedRoute from \"./utils/routes/AnimatedRoute\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nfunction App() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [user, setUser] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n        \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setIsLoggedIn(true);\r\n                setUser(user);\r\n                setIsLoading(false);\r\n            } else {\r\n                setUser({});\r\n                setIsLoggedIn(false);\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const location = useLocation();\r\n\r\n    if(isLoading) return <Loading />;\r\n\r\n    return (\r\n        <AppContext.Provider value={[isLoggedIn, user]}>\r\n            <Header />\r\n            <AnimatePresence exitBeforeEnter initial={false}>\r\n                <Switch key={location.pathname} location={location}>\r\n                    {routes.map((route, index) => {\r\n                        if(route.protected === \"guest\"){\r\n                            return (\r\n                                <GuestRoute\r\n                                    key={index}\r\n                                    path={route.path}\r\n                                    exact={route.exact}\r\n                                >\r\n                                    <route.component />\r\n                                </GuestRoute>\r\n                            );\r\n                        } \r\n                        \r\n                        if(route.protected === \"auth\"){\r\n                            return (\r\n                                <AuthRoute\r\n                                    key={index}\r\n                                    path={route.path}\r\n                                    exact={route.exact}\r\n                                >\r\n                                    <route.component />\r\n                                </AuthRoute>\r\n                            );   \r\n                        } \r\n                                \r\n                        return(\r\n                            <AnimatedRoute\r\n                                key={index}\r\n                                path={route.path}\r\n                                exact={route.exact}\r\n                            >\r\n                                <route.component />\r\n                            </AnimatedRoute>\r\n                        );\r\n                    })}\r\n                    <Route path=\"*\">\r\n                        <NotFound />\r\n                    </Route>\r\n                </Switch>\r\n            </AnimatePresence>\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./assets/css/tailwind.css\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>, \r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}