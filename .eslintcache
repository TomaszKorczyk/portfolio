[{"D:\\Nauka\\VS\\git\\portfolio\\src\\index.js":"1","D:\\Nauka\\VS\\git\\portfolio\\src\\App.js":"2","D:\\Nauka\\VS\\git\\portfolio\\src\\components\\Images.js":"3"},{"size":189,"mtime":1611511735964,"results":"4","hashOfConfig":"5"},{"size":2793,"mtime":1612192556745,"results":"6","hashOfConfig":"5"},{"size":4098,"mtime":1612192204860,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"jw99z6",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Nauka\\VS\\git\\portfolio\\src\\index.js",[],["16","17"],"D:\\Nauka\\VS\\git\\portfolio\\src\\App.js",["18"],"import React,{useState} from \"react\";\r\nimport \"./assets/css/tailwind.css\";\r\nimport Images from \"./components/Images\";\r\n\r\nfunction App() {\r\n    const [title, setTitle] = useState(\"Hello React\");\r\n    // const [isShowing, setIsShowing] = useState(false);\r\n    // const [didMount, setDidMount] = useState(false);\r\n    // const mountRef = useRef(false);\r\n\r\n// Component Did Mount only\r\n\r\n    // useEffect(() => {\r\n    //     setDidMount(true);\r\n    //     console.log(\"App Mounted\");   \r\n    // }, []);\r\n\r\n// Component Will Update\r\n\r\n    // useEffect(() => {\r\n    //     if (mountRef.current) {\r\n    //         console.log(\"App Updated\");\r\n    //     } else {\r\n    //         mountRef.current = true;\r\n    //     }\r\n    // }, [isShowing]);\r\n\r\n    // function handleClick() {\r\n    //     setIsShowing(!isShowing);\r\n    // }\r\n\r\n    return (\r\n        <section className=\"flex justify-center\">\r\n            <div className=\"w-full\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"my-4 text-white italic font-semibold\">\r\n                        {title}\r\n                    </div>\r\n                    {/* <button \r\n                        className=\"my-2 p-2 bg-white text-blue-600 font-bold tracking-normal rounded-full focus:outline-none\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        Toogle Image\r\n                    </button> */}\r\n                    <Images />\r\n                </div>\r\n            </div>\r\n                {/* {isShowing ? <Images /> : null} */}\r\n        </section>\r\n    );\r\n}\r\n\r\n// class App extends React.Component {\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {title: \"Hello React 2\", isShowing: false};\r\n//     }\r\n// states are Immutable\r\n\r\n// handleClick = () => {\r\n//     this.setState({isShowing: !this.state.isShowing})\r\n// };\r\n\r\n//     render() {\r\n//         return(\r\n//             <section className=\"flex justify-center\">\r\n//                 <div className=\"w-1/2\">\r\n//                     <div className=\"text-center\">\r\n//                         <div className=\"my-4 text-white italic font-semibold\">\r\n//                             {this.state.title}\r\n//                         </div>\r\n//                         <button \r\n//                             className=\"my-2 p-2 bg-white text-blue-600 font-bold tracking-normal rounded-full focus:outline-none\"\r\n//                             onClick={this.handleClick}\r\n//                         >\r\n//                             Toogle Image\r\n//                         </button>\r\n//                     </div>\r\n//                     {this.state.isShowing ? <Images /> : null}\r\n//                 </div>\r\n//             </section>\r\n//         );        \r\n//     }\r\n// }\r\n\r\nexport default App;","D:\\Nauka\\VS\\git\\portfolio\\src\\components\\Images.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":6,"column":19,"nodeType":"25","messageId":"26","endLine":6,"endColumn":27},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'setTitle' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]